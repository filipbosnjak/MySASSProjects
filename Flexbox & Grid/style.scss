@import url('https://fonts.googleapis.com/css2?family=Commissioner:wght@100;200;300;400;500;600;700;800;900&display=swap');
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Commissioner', sans-serif;
    border-radius: 8px;
}
body{
    position: relative;
    height: 200vh;
    h1{
        font-weight: 400;;
    }
    .title{
        position: absolute;
        top:50%;
    }
    
    .upleft{
        position: absolute;
        top:20%;
        left:20%;
        width: 50px;
        height: 50px;
        border: 1px solid blue;
    }
    .downright{
        position: absolute;
        top:80%;
        left:80%;
        width: 50px;
        height: 50px;
        border: 1px solid blue;
    }
}
.wrapper{
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: row;

    //flex-start center flex-end
    //justify-content - alignment along the main axis - that is usually horizontal axis
    //align-itmes - alignment on the cross axis - usually vertical axis

    //flex-wrap: wrap;// content will align/fall down as the widht shrinks


    //flex-flow - direction and wrap combined
    //flex-flow: column wrap 

    //justify-content:space-evenly -> items are distributed so that the spacing between any two items (and the space to the edges) is equal

    position: absolute;
    width: 100%;//Combined with align-itmes:center and top:50vh it becomes centered on a screen
    top: 50vh;
    .blue{
        //flex:1;
        width: 300px;
        height: 50px;
        border: 1px solid blue;
        order: 1;//Default is 0
    }
    .green{
        //flex:2; //So we have three children of wrapper with flex 1,2,1. That gives 4 in total of which blue takes 1, green takes 2 and red takes 1
        width: 500px;
        height: 100px;
        border: 1px solid green;
        order:2;
    }
    .red{
        //flex: 1;
        width: 50px;
        height: 80px;
        border: 1px solid red;
    }
    
}
.cards{
    position: absolute;
    border: 1px solid black;
    width: 100%;
    height:30vh;
    top:5%;
    display: flex;
    justify-content: space-around;
    align-items: center;
    
    .card{
        border: 1px solid orangered;
        width: 100px;
        height: 100px;
        transition: .3s ease-in;
        &:hover{
            background-color: orangered;
        }
    }
  }

  .wrapper1{
    padding: 20px 0;
    display: flex;
    align-items: center;
    justify-content: space-around;
    flex-direction: row;
    border: 1px solid black;
    position: absolute;
    width: 100%;
    top: 80vh;
    .blue1{
        width: 250px;
        height: 50px;
        border: 1px solid blue;
        order: 1;
        //flex-shrink: 1;
        //flex-basis: 300px; //works similar to min-widht but overflow in y direction is hidden
    }
    .green1{
        
        width: 250px;
        height: 50px;
        border: 1px solid green;
        order:2;
        //flex-shrink: 1;
    }
    .red1{
        width: 250px;
        height: 50px;
        border: 1px solid red;
        //flex-shrink: 3; //As we shring the width of the screen red1 div shrinks more then other two
    }
    
}

.grid{
    width:100%;
    height:100vh;
    position: absolute;
    top:53%;
    border: black 1px solid;
    display: grid;
    grid-template-columns: 250px auto 250px;
    grid-template-rows: 20px 20px 20px;
    .item{
        width: 200px;
        height: 200px;
        border: blue 1px solid;
    }
}